{"version":3,"sources":["serviceWorker.js","context/auth.js","components/Navigation.js","components/CancelButton.js","components/Bookings.js","components/BookButton.js","components/AllEvents.js","components/DeleteButton.js","components/CreatedEvents.js","pages/Home.js","pages/Register.js","pages/Login.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","navItem","path","pathname","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setHome","setLogin","setItem","token","Navigation","useState","showModal","setShowModal","context","useContext","history","useHistory","handleLogoutButton","Menu","color","Item","href","name","active","as","Link","to","onClick","position","Icon","Modal","basic","size","open","Header","icon","content","Content","Actions","Button","inverted","push","DELETE_BOOKING_MUTATION","gql","CancelButton","showConfirm","setShowConfirm","bookingId","useMutation","variables","onError","err","refetchQueries","query","FETCH_ALL_EVENTS_QUERY","FETCH_USER_BOOKINGS","userId","deleteBooking","mutationLoading","loading","error","className","e","Confirm","cancelButton","confirmButton","onCancel","onConfirm","Bookings","useQuery","data","message","console","log","userBookings","Card","Group","centered","map","booking","event","key","_id","Image","floated","src","length","creator","avator","title","Meta","price","date","Description","description","extra","CREATE_BOOKING_MUTATION","BookButton","eventId","bookings","setOpen","update","_","result","createBooking","filter","primary","AllEvents","divided","events","Extra","creatorId","DELETE_EVENT_MUTATION","DeleteButton","deleteEvent","CreatedEvents","createdEventsList","CREATE_EVENT_MUTATION","Home","newEventValues","setNewEventValues","showEventModal","setShowEventModal","closeModal","handleOnChange","target","parseFloat","createEvent","mutationError","panes","menuItem","style","visibility","Popup","trigger","circular","render","Tab","Pane","unAuthModel","positive","labelPosition","authModel","Form","onSubmit","preventDefault","Input","iconPosition","label","placeholder","onChange","TextArea","marginTop","menu","fluid","vertical","tabular","dimmer","closeOnEscape","closeOnDimmerClick","onClose","REGISTER_USER_MUTATION","Register","username","email","password","regValues","setRegValues","registerUser","addUser","Dropdown","selection","options","text","image","avatar","graphQLErrors","LOGIN_USER_MUTATION","Login","loginValues","setLoginValues","showRegForm","setShowRegForm","loginUser","Container","Segment","padded","Grid","columns","relaxed","stackable","Column","verticalAlign","Divider","App","exact","component","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f1d71416.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nconst initialState = {\n  user: null,\n  navItem: \"home\",\n};\n\nconst pathname = window.location.pathname;\nconst path = pathname === \"/\" ? \"home\" : \"login\";\ninitialState.navItem = path;\n\nif (localStorage.getItem(\"jwtToken\")) {\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  navItem: \"home\",\n  login: (userData) => {},\n  logout: () => {},\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: null,\n      };\n    case \"NAV\":\n      return {\n        ...state,\n        navItem: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData,\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    dispatch({ type: \"LOGOUT\" });\n  }\n\n  function setHome() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"home\",\n    });\n  }\n\n  function setLogin() {\n    dispatch({\n      type: \"NAV\",\n      payload: \"login\",\n    });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        navItem: state.navItem,\n        setHome,\n        setLogin,\n        login,\n        logout,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\nimport { useHistory } from \"react-router-dom\";\n// sem-ui\nimport { Icon, Menu, Button, Modal, Header } from \"semantic-ui-react\";\n\nfunction Navigation() {\n  const [showModal, setShowModal] = useState(false);\n  const context = useContext(AuthContext);\n\n  const history = useHistory();\n\n  const handleLogoutButton = () => {\n    setShowModal(!showModal);\n  };\n\n  const navBar = !context.user ? (\n    <Menu color=\"blue\">\n      <Menu.Item>\n        <h1>\n          <a href=\"/\">eB</a>\n        </h1>\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"home\"\n        active={context.navItem === \"home\"}\n        as={Link}\n        to=\"/\"\n        onClick={context.setHome}\n        position=\"right\"\n      >\n        <Icon name=\"home\" />\n        Home\n      </Menu.Item>\n      <Menu.Item\n        name=\"login\"\n        active={context.navItem === \"login\"}\n        as={Link}\n        to=\"/login\"\n        onClick={context.setLogin}\n      >\n        <Icon name=\"user\" />\n        Login\n      </Menu.Item>\n    </Menu>\n  ) : (\n    <>\n      <Menu color=\"blue\">\n        <Menu.Item>\n          <h1>\n            <a href=\"/\">eB</a>\n          </h1>\n        </Menu.Item>\n\n        <Menu.Item\n          name=\"home\"\n          active={context.navItem === \"home\"}\n          as={Link}\n          to=\"/\"\n          onClick={context.setHome}\n          position=\"right\"\n        >\n          <Icon name=\"home\" />\n          Home\n        </Menu.Item>\n        <Menu.Item name=\"logout\" onClick={handleLogoutButton}>\n          <Icon name=\"log out\" />\n          Log Out\n        </Menu.Item>\n      </Menu>\n      <Modal basic size=\"small\" open={showModal}>\n        <Header icon=\"log out\" content=\"Please confirm\" />\n        <Modal.Content>\n          <p>Are you sure you want to log out?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" inverted onClick={handleLogoutButton}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"green\"\n            inverted\n            onClick={() => {\n              context.logout();\n              handleLogoutButton();\n              history.push(\"/login\");\n              context.setLogin();\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n  return navBar;\n}\n\nexport default Navigation;\n","import React, { useState, useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { FETCH_USER_BOOKINGS } from \"../components/Bookings\";\nimport { FETCH_ALL_EVENTS_QUERY } from \"../components/AllEvents\";\nimport { AuthContext } from \"../context/auth\";\n\n// sem-ui\nimport { Button, Confirm } from \"semantic-ui-react\";\n\nfunction CancelButton(props) {\n  const context = useContext(AuthContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { bookingId } = props;\n\n  const [\n    deleteBooking,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation(DELETE_BOOKING_MUTATION, {\n    variables: {\n      bookingId,\n    },\n    onError(err) {},\n    refetchQueries: [\n      { query: FETCH_ALL_EVENTS_QUERY },\n      {\n        query: FETCH_USER_BOOKINGS,\n        variables: {\n          userId: context.user ? context.user.userId : null,\n        },\n      },\n    ],\n  });\n\n  const handleCancel = () => {\n    deleteBooking();\n    setShowConfirm(false);\n  };\n  if (mutationError) {\n    return <h1>Error...</h1>;\n  }\n  return (\n    <div className=\"ui two buttons\">\n      <Button type=\"submit\" color=\"red\" onClick={(e) => setShowConfirm(true)}>\n        Cancel Booking\n      </Button>\n      <Confirm\n        className={mutationLoading ? \"loading\" : \"\"}\n        open={showConfirm}\n        cancelButton=\"Never mind\"\n        confirmButton=\"Let's do it\"\n        onCancel={(e) => setShowConfirm(false)}\n        onConfirm={handleCancel}\n      />\n    </div>\n  );\n}\n\nconst DELETE_BOOKING_MUTATION = gql`\n  mutation deleteBooking($bookingId: String!) {\n    deleteBooking(bookingId: $bookingId) {\n      _id\n    }\n  }\n`;\n\nexport default CancelButton;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\n// components\nimport CancelButton from \"./CancelButton\";\n\n// sem-ui\nimport { Card, Image } from \"semantic-ui-react\";\n\nfunction Bookings() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_USER_BOOKINGS, {\n    variables: {\n      userId: context.user ? context.user.userId : null,\n    },\n  });\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  console.log(data.userBookings);\n  return (\n    <div>\n      <Card.Group centered>\n        {data.userBookings &&\n          data.userBookings.map(\n            (booking) =>\n              booking.event && (\n                <Card key={booking._id}>\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={\n                        booking.event && booking.event.length > 0\n                          ? booking.event.creator.avator\n                          : null\n                      }\n                    />\n                    <Card.Header>\n                      <strong>{booking.event.title}</strong>\n                    </Card.Header>\n                    <Card.Meta>\n                      ${booking.event.price}\n                      {\", \"}\n                      {booking.event.date}\n                    </Card.Meta>\n                    <Card.Description>\n                      {booking.event.description}\n                    </Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <CancelButton bookingId={booking._id} />\n                  </Card.Content>\n                </Card>\n              )\n          )}\n      </Card.Group>\n    </div>\n  );\n}\n\nexport const FETCH_USER_BOOKINGS = gql`\n  query userBookings($userId: String!) {\n    userBookings(userId: $userId) {\n      _id\n      event {\n        _id\n        title\n        description\n        price\n        date\n        creator {\n          avator\n        }\n      }\n    }\n  }\n`;\n\nexport default Bookings;\n","import React, { useState, useContext } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { FETCH_ALL_EVENTS_QUERY } from \"./AllEvents\";\nimport { FETCH_USER_BOOKINGS } from \"./Bookings\";\nimport { AuthContext } from \"../context/auth\";\n\n// sem-ui\nimport { Button, Icon, Confirm } from \"semantic-ui-react\";\n\nfunction BookButton({ eventId, userId, bookings }) {\n  const context = useContext(AuthContext);\n  const [open, setOpen] = useState(false);\n  const [\n    createBooking,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation(CREATE_BOOKING_MUTATION, {\n    update(_, result) {\n      console.log(result);\n    },\n    variables: {\n      eventId,\n      userId,\n    },\n    onError(err) {},\n    refetchQueries: [\n      { query: FETCH_ALL_EVENTS_QUERY },\n      {\n        query: FETCH_USER_BOOKINGS,\n        variables: {\n          userId: context.user ? context.user.userId : null,\n        },\n      },\n    ],\n  });\n\n  const handleBooking = () => {\n    createBooking();\n    setOpen(false);\n  };\n\n  if (mutationError) {\n    return <p>Error...</p>;\n  }\n  if (bookings && bookings.length > 0) {\n    const result = bookings.filter((booking) => booking.userId === userId);\n    if (result.length > 0) {\n      return (\n        <>\n          <Button color=\"green\" floated=\"right\">\n            Booked\n          </Button>\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Button primary floated=\"right\" onClick={(e) => setOpen(true)}>\n        Book\n        <Icon name=\"right chevron\" />\n      </Button>\n      <Confirm\n        open={open}\n        onCancel={(e) => setOpen(false)}\n        onConfirm={handleBooking}\n        className={mutationLoading ? \"loading\" : \"\"}\n      />\n    </>\n  );\n}\n\nconst CREATE_BOOKING_MUTATION = gql`\n  mutation createBooking($eventId: String!, $userId: String!) {\n    createBooking(input: { eventId: $eventId, userId: $userId }) {\n      _id\n    }\n  }\n`;\n\nexport default BookButton;\n","import React, { useContext } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\nimport { Link } from \"react-router-dom\";\n// components\nimport BookButton from \"./BookButton\";\n// sem-ui\nimport { Button, Icon, Item } from \"semantic-ui-react\";\n\nfunction AllEvents() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_ALL_EVENTS_QUERY);\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <Item.Group divided>\n        {data.events &&\n          data.events.map((event) => (\n            <Item key={event._id}>\n              <Item.Image src={event.creator.avator} />\n\n              <Item.Content>\n                <Item.Header>{event.title}</Item.Header>\n                <Item.Meta>\n                  <span className=\"price\">${event.price},</span>{\" \"}\n                  <span className=\"date\">{event.date}</span>\n                </Item.Meta>\n                <Item.Description>{event.description}</Item.Description>\n                <Item.Extra>\n                  {context.user ? (\n                    context.user.userId === event.creatorId ? null : (\n                      <BookButton\n                        eventId={event._id}\n                        userId={context.user ? context.user.userId : null}\n                        bookings={event.bookings}\n                      />\n                    )\n                  ) : (\n                    <Button\n                      as={Link}\n                      to=\"/login\"\n                      primary\n                      floated=\"right\"\n                      onClick={context.setLogin}\n                    >\n                      Book\n                      <Icon name=\"right chevron\" />\n                    </Button>\n                  )}\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          ))}\n      </Item.Group>\n    </div>\n  );\n}\n\nexport default AllEvents;\n\nexport const FETCH_ALL_EVENTS_QUERY = gql`\n  query {\n    events {\n      _id\n      title\n      description\n      price\n      date\n      creatorId\n      creator {\n        username\n        avator\n      }\n      bookings {\n        userId\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { FETCH_ALL_EVENTS_QUERY } from \"../components/AllEvents\";\n\n// sem-ui\nimport { Button, Confirm } from \"semantic-ui-react\";\n\nfunction DeleteButton(props) {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { eventId: _id, creatorId } = props;\n\n  const [\n    deleteEvent,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation(DELETE_EVENT_MUTATION, {\n    variables: {\n      _id,\n      creatorId,\n    },\n    onError(err) {},\n    refetchQueries: [{ query: FETCH_ALL_EVENTS_QUERY }],\n  });\n\n  const handleDelete = () => {\n    deleteEvent();\n    setShowConfirm(false);\n  };\n  if (mutationError) {\n    return <h1>Error...</h1>;\n  }\n  return (\n    <div className=\"ui two buttons\">\n      <Button type=\"submit\" color=\"red\" onClick={(e) => setShowConfirm(true)}>\n        Delete\n      </Button>\n      <Confirm\n        className={mutationLoading ? \"loading\" : \"\"}\n        open={showConfirm}\n        cancelButton=\"Never mind\"\n        confirmButton=\"Let's do it\"\n        onCancel={(e) => setShowConfirm(false)}\n        onConfirm={handleDelete}\n      />\n    </div>\n  );\n}\n\nconst DELETE_EVENT_MUTATION = gql`\n  mutation deleteEvent($_id: String!, $creatorId: String!) {\n    deleteEvent(input: { _id: $_id, creatorId: $creatorId }) {\n      _id\n    }\n  }\n`;\n\nexport default DeleteButton;\n","import React, { useContext } from \"react\";\nimport { FETCH_ALL_EVENTS_QUERY } from \"./AllEvents\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/auth\";\n\n// components\nimport DeleteButton from \"./DeleteButton\";\n// sem-ui\nimport { Card } from \"semantic-ui-react\";\n\nfunction CreatedEvents() {\n  const context = useContext(AuthContext);\n  const { loading, error, data } = useQuery(FETCH_ALL_EVENTS_QUERY);\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n  if (error) {\n    return <h1>Error...</h1>;\n  }\n  const createdEventsList = data.events.filter((event) => {\n    return event.creatorId === context.user.userId;\n  });\n\n  return (\n    <div>\n      <Card.Group centered>\n        {createdEventsList &&\n          createdEventsList.map((event) => (\n            <Card key={event._id}>\n              <Card.Content>\n                <Card.Header>\n                  <strong>{event.title}</strong>\n                </Card.Header>\n                <Card.Meta>\n                  ${event.price}\n                  {\", \"}\n                  {event.date}\n                </Card.Meta>\n                <Card.Description>{event.description}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <DeleteButton\n                  eventId={event._id}\n                  creatorId={context.user ? context.user.userId : null}\n                />\n              </Card.Content>\n            </Card>\n          ))}\n      </Card.Group>\n    </div>\n  );\n}\n\nexport default CreatedEvents;\n","import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { FETCH_ALL_EVENTS_QUERY } from \"../components/AllEvents\";\n// components\nimport AllEvents from \"../components/AllEvents\";\nimport CreatedEvents from \"../components/CreatedEvents\";\nimport Bookings from \"../components/Bookings\";\n// sem-ui\nimport {\n  Menu,\n  Tab,\n  Header,\n  Button,\n  Popup,\n  Modal,\n  Form,\n} from \"semantic-ui-react\";\nimport gql from \"graphql-tag\";\n\nfunction Home() {\n  const [newEventValues, setNewEventValues] = useState({\n    title: \"\",\n    description: \"\",\n    price: \"\",\n    date: \"\",\n  });\n  const [showEventModal, setShowEventModal] = useState(false);\n  const context = useContext(AuthContext);\n  const showModal = () => {\n    //\n    setShowEventModal(true);\n  };\n  const closeModal = () => {\n    //\n    setShowEventModal(false);\n  };\n  const handleOnChange = (e) => {\n    //\n    setNewEventValues({ ...newEventValues, [e.target.name]: e.target.value });\n  };\n\n  const [\n    createEvent,\n    { loading: mutationLoading, error: mutationError },\n  ] = useMutation(CREATE_EVENT_MUTATION, {\n    update(_, result) {\n      //\n    },\n    variables: {\n      ...newEventValues,\n      creatorId: context.user ? context.user.userId : null,\n      price: parseFloat(newEventValues.price),\n    },\n    onError(err) {},\n    refetchQueries: [{ query: FETCH_ALL_EVENTS_QUERY }],\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createEvent();\n    setNewEventValues({\n      title: \"\",\n      description: \"\",\n      price: \"\",\n      date: \"\",\n    });\n    setShowEventModal(false);\n  };\n  const panes = [\n    {\n      menuItem: (\n        <Menu.Item key=\"all-events\">\n          All Events\n          <hr style={{ visibility: \"hidden\" }} />\n          <Popup\n            content=\"Add an event\"\n            trigger={<Button icon=\"plus\" circular onClick={showModal} />}\n            position=\"right center\"\n          />\n        </Menu.Item>\n      ),\n      render: () => (\n        <Tab.Pane>\n          <AllEvents />\n        </Tab.Pane>\n      ),\n    },\n    context.user && {\n      menuItem: <Menu.Item key=\"created-events\">Created Events</Menu.Item>,\n      render: () => (\n        <Tab.Pane>\n          <CreatedEvents />\n        </Tab.Pane>\n      ),\n    },\n    context.user && {\n      menuItem: <Menu.Item key=\"bookings\">Bookings</Menu.Item>,\n      render: () => (\n        <Tab.Pane>\n          <Bookings />\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  const unAuthModel = (\n    <>\n      {\" \"}\n      <Modal.Header>Please Login or Signup to add a new event.</Modal.Header>\n      <Modal.Content>\n        <Modal.Actions>\n          <Button\n            as={Link}\n            to=\"/login\"\n            positive\n            icon=\"user\"\n            labelPosition=\"right\"\n            content=\"Login\"\n            onClick={context.setLogin}\n          />\n          <Button\n            as={Link}\n            to=\"/login\"\n            positive\n            icon=\"signup\"\n            labelPosition=\"right\"\n            content=\"Signup\"\n            onClick={context.setLogin}\n          />\n        </Modal.Actions>\n      </Modal.Content>\n    </>\n  );\n\n  const authModel = (\n    <>\n      <Modal.Header>Add an event</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Header>Enter below details</Header>\n          <Form\n            onSubmit={handleSubmit}\n            className={mutationLoading ? \"loading\" : \"\"}\n          >\n            <Form.Input\n              icon=\"star\"\n              iconPosition=\"right\"\n              label=\"Title\"\n              placeholder=\"Name of the event..\"\n              name=\"title\"\n              value={newEventValues.title}\n              onChange={handleOnChange}\n            />\n            <Form.TextArea\n              label=\"Description\"\n              placeholder=\"Tell us about the event..\"\n              name=\"description\"\n              value={newEventValues.description}\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              icon=\"dollar sign\"\n              iconPosition=\"right\"\n              label=\"Price\"\n              placeholder=\"How much does it cost..\"\n              name=\"price\"\n              value={newEventValues.price}\n              onChange={handleOnChange}\n            />\n            <Form.Input\n              label=\"Date\"\n              placeholder=\"When is it..\"\n              name=\"date\"\n              type=\"date\"\n              value={newEventValues.date}\n              onChange={handleOnChange}\n            />\n            <Button\n              floated=\"right\"\n              color=\"red\"\n              icon=\"cancel\"\n              labelPosition=\"right\"\n              content=\"No, I changed my mind!\"\n              onClick={closeModal}\n            />\n            <Button\n              positive\n              icon=\"checkmark\"\n              labelPosition=\"right\"\n              content=\"Yep, add it!\"\n            />\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n    </>\n  );\n\n  if (mutationError) {\n    console.log(mutationError);\n  }\n  return (\n    <>\n      <div style={{ marginTop: \"10px\" }}>\n        <Tab\n          menu={{ fluid: true, vertical: true, tabular: \"right\" }}\n          panes={panes}\n        />\n      </div>\n      <Modal\n        dimmer=\"blurring\"\n        open={showEventModal}\n        closeOnEscape={showEventModal}\n        closeOnDimmerClick={showEventModal}\n        onClose={closeModal}\n        size=\"tiny\"\n      >\n        {context.user ? authModel : unAuthModel}\n      </Modal>\n    </>\n  );\n}\n\nconst CREATE_EVENT_MUTATION = gql`\n  mutation createEvent(\n    $creatorId: String!\n    $title: String!\n    $description: String!\n    $price: Float!\n    $date: String!\n  ) {\n    createEvent(\n      input: {\n        creatorId: $creatorId\n        title: $title\n        description: $description\n        price: $price\n        date: $date\n      }\n    ) {\n      _id\n      title\n      description\n      price\n      date\n      creatorId\n    }\n  }\n`;\n\nexport default Home;\n","import React, { useContext, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n\n// sem-ui\nimport { Button, Form } from \"semantic-ui-react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nfunction Register() {\n  const context = useContext(AuthContext);\n\n  const history = useHistory();\n\n  const [regValues, setRegValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    avator: \"\",\n  });\n\n  const [addUser, { loading: mutationLoading, error }] = useMutation(\n    REGISTER_USER_MUTATION,\n    {\n      update(_, result) {\n        context.login(result.data.registerUser);\n        history.push(\"/\");\n        context.setHome();\n      },\n      variables: regValues,\n      onError(err) {},\n    }\n  );\n  const friendOptions = [\n    {\n      key: \"Jenny\",\n      text: \"Jenny\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/jenny.jpg\",\n      },\n    },\n    {\n      key: \"Elliot\",\n      text: \"Elliot\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/elliot.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/elliot.jpg\",\n      },\n    },\n    {\n      key: \"Stevie\",\n      text: \"Stevie\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/stevie.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/stevie.jpg\",\n      },\n    },\n    {\n      key: \"Christian\",\n      text: \"Christian\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/christian.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/christian.jpg\",\n      },\n    },\n    {\n      key: \"Matt\",\n      text: \"Matt\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/matt.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/matt.jpg\",\n      },\n    },\n    {\n      key: \"Justen\",\n      text: \"Justen\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/justen.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/justen.jpg\",\n      },\n    },\n    {\n      key: \"Daniel\",\n      text: \"Daniel\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/daniel.jpg\",\n      },\n    },\n    {\n      key: \"Tom\",\n      text: \"Tom\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/tom.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/tom.jpg\",\n      },\n    },\n    {\n      key: \"Rachel\",\n      text: \"Rachel\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/rachel.png\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/rachel.png\",\n      },\n    },\n    {\n      key: \"Veronika\",\n      text: \"Veronika\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/veronika.jpg\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/veronika.jpg\",\n      },\n    },\n    {\n      key: \"Matthew\",\n      text: \"Matthew\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n      },\n    },\n    {\n      key: \"Molly\",\n      text: \"Molly\",\n      value: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n      image: {\n        avatar: true,\n        src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n      },\n    },\n  ];\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addUser();\n  };\n  const handleOnChange = (e) => {\n    //\n    setRegValues({ ...regValues, [e.target.name]: e.target.value });\n  };\n  const handleDropdown = (e, { value }) => {\n    //\n    setRegValues({ ...regValues, avator: value });\n  };\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <hr style={{ visibility: \"hidden\" }} />\n      <Form\n        onSubmit={handleSubmit}\n        className={mutationLoading ? \"loading\" : \"\"}\n      >\n        <Form.Input\n          icon=\"user\"\n          iconPosition=\"left\"\n          label=\"Username\"\n          placeholder=\"Username..\"\n          name=\"username\"\n          value={regValues.username}\n          onChange={handleOnChange}\n        />\n        <Form.Input\n          icon=\"mail\"\n          iconPosition=\"left\"\n          label=\"Email\"\n          placeholder=\"Email..\"\n          name=\"email\"\n          value={regValues.email}\n          onChange={handleOnChange}\n        />\n        <Form.Input\n          icon=\"lock\"\n          iconPosition=\"left\"\n          label=\"Password\"\n          type=\"password\"\n          placeholder=\"Password..\"\n          name=\"password\"\n          value={regValues.password}\n          onChange={handleOnChange}\n        />\n        <hr style={{ visibility: \"hidden\" }} />\n        <Dropdown\n          placeholder=\"Choose an avator\"\n          selection\n          options={friendOptions}\n          name=\"avator\"\n          value={regValues.avator}\n          onChange={handleDropdown}\n        />\n        <hr style={{ visibility: \"hidden\" }} />\n        <Button content=\"Sign up\" primary />\n      </Form>\n      <div className={error ? \"ui error message\" : \"\"}>\n        {error && error.graphQLErrors[0].message}\n        <br />\n        <br />\n        {error && <span>Please try again</span>}\n      </div>\n    </div>\n  );\n}\n\nconst REGISTER_USER_MUTATION = gql`\n  mutation registerUser(\n    $username: String!\n    $email: String!\n    $password: String!\n    $avator: String!\n  ) {\n    registerUser(\n      input: {\n        username: $username\n        email: $email\n        password: $password\n        avator: $avator\n      }\n    ) {\n      userId\n      token\n      tokenExp\n    }\n  }\n`;\n\nexport default Register;\n","import React, { useContext, useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/auth\";\n// components\nimport Register from \"./Register\";\n\n// sem-ui\nimport {\n  Button,\n  Divider,\n  Form,\n  Segment,\n  Grid,\n  Container,\n} from \"semantic-ui-react\";\n\nfunction Login() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n\n  const [loginValues, setLoginValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [showRegForm, setShowRegForm] = useState(false);\n\n  const [loginUser, { loading: mutationLoading, error }] = useMutation(\n    LOGIN_USER_MUTATION,\n    {\n      update(_, result) {\n        context.login(result.data.login);\n        history.push(\"/\");\n        context.setHome();\n      },\n      variables: loginValues,\n      onError(err) {},\n    }\n  );\n\n  const handleOnChange = (e) => {\n    //\n    setLoginValues({ ...loginValues, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    loginUser();\n  };\n\n  return (\n    <Container>\n      <Segment\n        style={{ marginTop: \"50px\" }}\n        placeholder\n        padded=\"very\"\n        fluid=\"true\"\n      >\n        <Grid columns={2} relaxed=\"very\" stackable>\n          <Grid.Column verticalAlign=\"middle\">\n            <h1>Login</h1>\n            <hr style={{ visibility: \"hidden\" }} />\n            <Form\n              onSubmit={handleSubmit}\n              className={mutationLoading ? \"loading\" : \"\"}\n            >\n              <Form.Input\n                icon=\"mail\"\n                iconPosition=\"left\"\n                label=\"Email\"\n                placeholder=\"Email..\"\n                name=\"email\"\n                value={loginValues.email}\n                onChange={handleOnChange}\n              />\n              <Form.Input\n                icon=\"lock\"\n                iconPosition=\"left\"\n                label=\"Password\"\n                type=\"password\"\n                placeholder=\"Password..\"\n                name=\"password\"\n                value={loginValues.password}\n                onChange={handleOnChange}\n              />\n              <Button content=\"Login\" primary />\n            </Form>\n            <div className={error ? \"ui error message\" : \"\"}>\n              {error && error.graphQLErrors[0].message}\n              <br />\n              <br />\n              {error && <span>Please try again</span>}\n            </div>\n          </Grid.Column>\n\n          <Grid.Column verticalAlign=\"middle\">\n            {!showRegForm && (\n              <Button\n                content=\"Sign up\"\n                icon=\"signup\"\n                size=\"big\"\n                onClick={(e) => {\n                  setShowRegForm(true);\n                }}\n              />\n            )}\n            {showRegForm && <Register />}\n          </Grid.Column>\n        </Grid>\n\n        <Divider vertical>Or</Divider>\n      </Segment>\n    </Container>\n  );\n}\n\nconst LOGIN_USER_MUTATION = gql`\n  mutation login($email: String!, $password: String!) {\n    login(input: { email: $email, password: $password }) {\n      userId\n      token\n      tokenExp\n    }\n  }\n`;\n\nexport default Login;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { AuthProvider } from \"./context/auth\";\n// components\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\n// sem-ui\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Container } from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <AuthProvider>\n          <Router>\n            <Navigation />\n            <div className=\"App\">\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n            </div>\n          </Router>\n        </AuthProvider>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport {\n  ApolloClient,\n  ApolloLink,\n  InMemoryCache,\n  HttpLink,\n} from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nconst httpLink = new HttpLink({\n  uri: \"https://events-bookings-app-server.herokuapp.com/graphql/\",\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n  // Retrieve the authorization token from local storage.\n  const token = localStorage.getItem(\"jwtToken\");\n\n  // Use the setContext method to set the HTTP headers.\n  operation.setContext({\n    headers: {\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  });\n\n  // Call the next link in the middleware chain.\n  return forward(operation);\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), // Chain it with the HttpLink\n  cache: new InMemoryCache(),\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}